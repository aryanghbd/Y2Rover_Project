{"ast":null,"code":"var _jsxFileName = \"/Users/hollysolomon/Documents/year2/finalproject/test2/react-crud/src/components/instruction.component.js\";\nimport React, { Component } from \"react\";\nimport InstructionDataService from \"../services/instruction.service\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Instruction extends Component {\n  constructor(props) {\n    super(props);\n    this.onChangeInstruction = this.onChangeInstruction.bind(this);\n    this.getInstruction = this.getInstruction.bind(this);\n    this.updateCompletion = this.updateCompletion.bind(this);\n    this.updateInstruction = this.updateInstruction.bind(this);\n    this.deleteInstruction = this.deleteInstruction.bind(this);\n    this.state = {\n      currentInstruction: {\n        id: null,\n        direction: \"\",\n        obstacle: false,\n        status: \"\"\n      },\n      message: \"\"\n    };\n  }\n\n  componentDidMount() {\n    this.getInstruction(this.props.match.params.id);\n  }\n\n  onChangeInstruction(e) {\n    const direction = e.target.value;\n    this.setState(function (prevState) {\n      return {\n        currentInstruction: { ...prevState.currentInstruction,\n          direction: direction\n        }\n      };\n    });\n  }\n\n  getInstruction(id) {\n    InstructionDataService.get(id).then(response => {\n      this.setState({\n        currentInstruction: response.data\n      });\n      console.log(response.data);\n    }).catch(e => {\n      console.log(e);\n    });\n  }\n\n  updateCompletion(status) {\n    var data = {\n      id: this.state.currentInstruction.id,\n      direction: this.state.currentInstruction.direction,\n      obstacle: this.state.currentInstruction.obstacle,\n      status: status\n    };\n    InstructionDataService.update(this.state.currentInstruction.id, data).then(response => {\n      this.setState(prevState => ({\n        currentInstruction: { ...prevState.currentInstruction,\n          status: status\n        }\n      }));\n      console.log(response.data);\n    }).catch(e => {\n      console.log(e);\n    });\n  }\n\n  updateInstruction() {\n    InstructionDataService.update(this.state.currentInstruction.id, this.state.currentInstruction).then(response => {\n      console.log(response.data);\n      this.setState({\n        message: \"The instruction was updated successfully!\"\n      });\n    }).catch(e => {\n      console.log(e);\n    });\n  }\n\n  deleteInstruction() {\n    InstructionDataService.delete(this.state.currentInstruction.id).then(response => {\n      console.log(response.data);\n      this.props.history.push('/instructions');\n    }).catch(e => {\n      console.log(e);\n    });\n  }\n\n  render() {\n    const {\n      currentInstruction\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: currentInstruction ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"edit-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Instruction\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"direction\",\n              children: \"direction\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control\",\n              id: \"direction\",\n              value: currentInstruction.direction,\n              onChange: this.onChangeInstruction\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Status:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 17\n            }, this), currentInstruction.status ? \"Complete\" : \"Pending\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this), currentInstruction.status ? /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"badge badge-primary mr-2\",\n          onClick: () => this.updateCompletion(false),\n          children: \"UnPublish\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"badge badge-primary mr-2\",\n          onClick: () => this.updateCompletion(true),\n          children: \"Publish\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"badge badge-danger mr-2\",\n          onClick: this.deleteInstruction,\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"badge badge-success\",\n          onClick: this.updateInstruction,\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: this.state.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Please click on an Instruction...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/hollysolomon/Documents/year2/finalproject/test2/react-crud/src/components/instruction.component.js"],"names":["React","Component","InstructionDataService","Instruction","constructor","props","onChangeInstruction","bind","getInstruction","updateCompletion","updateInstruction","deleteInstruction","state","currentInstruction","id","direction","obstacle","status","message","componentDidMount","match","params","e","target","value","setState","prevState","get","then","response","data","console","log","catch","update","delete","history","push","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport InstructionDataService from \"../services/instruction.service\";\n\nexport default class Instruction extends Component {\n  constructor(props) {\n    super(props);\n    this.onChangeInstruction = this.onChangeInstruction.bind(this);\n    this.getInstruction = this.getInstruction.bind(this);\n    this.updateCompletion = this.updateCompletion.bind(this);\n    this.updateInstruction = this.updateInstruction.bind(this);\n    this.deleteInstruction = this.deleteInstruction.bind(this);\n\n    this.state = {\n      currentInstruction: {\n        id: null,\n        direction: \"\",\n        obstacle: false,\n        status: \"\"\n      },\n      message: \"\"\n    };\n  }\n\n  componentDidMount() {\n    this.getInstruction(this.props.match.params.id);\n  }\n\n  onChangeInstruction(e) {\n    const direction = e.target.value;\n\n    this.setState(function(prevState) {\n      return {\n        currentInstruction: {\n          ...prevState.currentInstruction,\n          direction: direction\n        }\n      };\n    });\n  }\n\n\n  getInstruction(id) {\n    InstructionDataService.get(id)\n      .then(response => {\n        this.setState({\n          currentInstruction: response.data\n        });\n        console.log(response.data);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  }\n\n  updateCompletion(status) {\n    var data = {\n      id: this.state.currentInstruction.id,\n      direction: this.state.currentInstruction.direction,\n      obstacle: this.state.currentInstruction.obstacle,\n      status: status\n    };\n\n    InstructionDataService.update(this.state.currentInstruction.id, data)\n      .then(response => {\n        this.setState(prevState => ({\n          currentInstruction: {\n            ...prevState.currentInstruction,\n            status: status\n          }\n        }));\n        console.log(response.data);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  }\n\n  updateInstruction() {\n    InstructionDataService.update(\n      this.state.currentInstruction.id,\n      this.state.currentInstruction\n    )\n      .then(response => {\n        console.log(response.data);\n        this.setState({\n          message: \"The instruction was updated successfully!\"\n        });\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  }\n\n  deleteInstruction() {    \n    InstructionDataService.delete(this.state.currentInstruction.id)\n      .then(response => {\n        console.log(response.data);\n        this.props.history.push('/instructions')\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  }\n\n  render() {\n    const { currentInstruction } = this.state;\n\n    return (\n      <div>\n        {currentInstruction ? (\n          <div className=\"edit-form\">\n            <h4>Instruction</h4>\n            <form>\n              <div className=\"form-group\">\n                <label htmlFor=\"direction\">direction</label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  id=\"direction\"\n                  value={currentInstruction.direction}\n                  onChange={this.onChangeInstruction}\n                />\n              </div>\n\n              <div className=\"form-group\">\n                <label>\n                  <strong>Status:</strong>\n                </label>\n                {currentInstruction.status ? \"Complete\" : \"Pending\"}\n              </div>\n            </form>\n\n            {currentInstruction.status ? (\n              <button\n                className=\"badge badge-primary mr-2\"\n                onClick={() => this.updateCompletion(false)}\n              >\n                UnPublish\n              </button>\n            ) : (\n              <button\n                className=\"badge badge-primary mr-2\"\n                onClick={() => this.updateCompletion(true)}\n              >\n                Publish\n              </button>\n            )}\n\n            <button\n              className=\"badge badge-danger mr-2\"\n              onClick={this.deleteInstruction}\n            >\n              Delete\n            </button>\n\n            <button\n              type=\"submit\"\n              className=\"badge badge-success\"\n              onClick={this.updateInstruction}\n            >\n              Update\n            </button>\n            <p>{this.state.message}</p>\n          </div>\n        ) : (\n          <div>\n            <br />\n            <p>Please click on an Instruction...</p>\n          </div>\n        )}\n      </div>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}