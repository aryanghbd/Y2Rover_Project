{"ast":null,"code":"var _jsxFileName = \"/Users/hollysolomon/Documents/year2/finalproject/test2/react-crud/src/components/add-instruction.component.js\";\nimport React, { Component } from \"react\";\nimport InstructionDataService from \"../services/instruction.service\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar mqtt = require('mqtt');\n\nvar client = mqtt.connect('ws://3.12.103.104', {\n  clientId: \"react_feedback\",\n  username: \"hs2119\",\n  password: \"marsrover\"\n});\nconsole.log(\"connected flag  \" + client.connected);\nvar topic_list = [\"feedback\"];\nconsole.log(\"subscribing to topics\");\nclient.subscribe(topic_list, {\n  qos: 1\n}); //topic list\n\nexport default class AddInstruction extends Component {\n  constructor(props) {\n    super(props);\n    this.onChangeInstruction = this.onChangeInstruction.bind(this);\n    this.onChangeAmount = this.onChangeAmount.bind(this);\n    this.saveInstruction = this.saveInstruction.bind(this);\n    this.newInstruction = this.newInstruction.bind(this);\n    this.newError = this.newError.bind(this);\n    this.state = {\n      id: null,\n      instruction: \"\",\n      amount: \"\",\n      status: false,\n      submitted: false\n    };\n  }\n\n  newError() {\n    //handle incoming messages\n    client.on('message', function (topic, message, packet) {\n      if (message) {\n        console.log(\"message is \" + message);\n        console.log(\"topic is \" + topic);\n        alert(message);\n        InstructionDataService.delete(this.state.currentInstruction.id).then(response => {\n          console.log(response.data);\n          this.props.history.push('/instruction');\n        }).catch(e => {\n          console.log(e);\n        });\n      } else {\n        this.newInstruction();\n      }\n    });\n  }\n\n  onChangeInstruction(e) {\n    this.setState({\n      instruction: e.target.value\n    });\n  }\n\n  onChangeAmount(e) {\n    this.setState({\n      amount: e.target.value\n    });\n  }\n\n  saveInstruction() {\n    var data = {\n      instruction: this.state.instruction,\n      amount: this.state.amount\n    };\n    InstructionDataService.create(data).then(response => {\n      this.setState({\n        id: response.data.id,\n        instruction: response.data.instruction,\n        amount: response.data.amount,\n        status: response.data.status,\n        submitted: true\n      });\n      console.log(response.data);\n    }).catch(e => {\n      console.log(e);\n    });\n  }\n\n  newInstruction() {\n    this.setState({\n      id: null,\n      instruction: \"\",\n      amount: \"\",\n      status: false,\n      submitted: false\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"submit-form\",\n      children: this.state.submitted ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"You submitted successfully!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-success\",\n          onClick: this.newError,\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"instruction\",\n            children: \"Instruction\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            id: \"instruction\",\n            required: true,\n            value: this.state.instruction,\n            onChange: this.onChangeInstruction,\n            name: \"instruction\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"amount\",\n            children: \"Amount\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            id: \"amount\",\n            required: true,\n            value: this.state.amount,\n            onChange: this.onChangeAmount,\n            name: \"amount\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.saveInstruction,\n          className: \"btn btn-success\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/hollysolomon/Documents/year2/finalproject/test2/react-crud/src/components/add-instruction.component.js"],"names":["React","Component","InstructionDataService","mqtt","require","client","connect","clientId","username","password","console","log","connected","topic_list","subscribe","qos","AddInstruction","constructor","props","onChangeInstruction","bind","onChangeAmount","saveInstruction","newInstruction","newError","state","id","instruction","amount","status","submitted","on","topic","message","packet","alert","delete","currentInstruction","then","response","data","history","push","catch","e","setState","target","value","create","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport InstructionDataService from \"../services/instruction.service\";\n\nvar mqtt = require('mqtt')\nvar client = mqtt.connect('ws://3.12.103.104', {clientId:\"react_feedback\", username:\"hs2119\", password:\"marsrover\"})\nconsole.log(\"connected flag  \" + client.connected);\n\nvar topic_list=[\"feedback\"];\nconsole.log(\"subscribing to topics\");\nclient.subscribe(topic_list,{qos:1}); //topic list\n\nexport default class AddInstruction extends Component {\n  constructor(props) {\n    super(props);\n    this.onChangeInstruction = this.onChangeInstruction.bind(this);\n    this.onChangeAmount = this.onChangeAmount.bind(this);\n    this.saveInstruction = this.saveInstruction.bind(this);\n    this.newInstruction = this.newInstruction.bind(this);\n    this.newError = this.newError.bind(this);\n\n    this.state = {\n      id: null,\n      instruction: \"\",\n      amount: \"\", \n      status: false,\n\n      submitted: false\n    };\n  }\n\n\n  newError() {\n  //handle incoming messages\n  client.on('message',function(topic, message, packet){\n    if (message) {\n\tconsole.log(\"message is \"+ message);\n\tconsole.log(\"topic is \"+ topic);\n    alert(message)\n    InstructionDataService.delete(this.state.currentInstruction.id)\n      .then(response => {\n        console.log(response.data);\n        this.props.history.push('/instruction')\n      })\n      .catch(e => {\n        console.log(e);\n      });\n    } else {\n      this.newInstruction()\n    }\n  })\n\n  } \n\n  onChangeInstruction(e) {\n    this.setState({\n      instruction: e.target.value\n    });\n  }\n\n  onChangeAmount(e) {\n    this.setState({\n      amount: e.target.value\n    });\n  }\n\n  saveInstruction() {\n    var data = {\n      instruction: this.state.instruction,\n      amount: this.state.amount\n    };\n\n    InstructionDataService.create(data)\n      .then(response => {\n        this.setState({\n          id: response.data.id,\n          instruction: response.data.instruction,\n          amount: response.data.amount,\n          status: response.data.status,\n\n          submitted: true\n        });\n        console.log(response.data);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  }\n\n  newInstruction() {\n    this.setState({\n      id: null,\n      instruction: \"\",\n      amount: \"\",\n      status: false,\n\n      submitted: false\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"submit-form\">\n        {this.state.submitted ? (\n          <div>\n            <h4>You submitted successfully!</h4>\n            <button className=\"btn btn-success\" onClick={this.newError}>\n              Add\n            </button>\n          </div>\n        ) : (\n          <div>\n            \n            <div className=\"form-group\">\n              <label htmlFor=\"instruction\">Instruction</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"instruction\"\n                required\n                value={this.state.instruction}\n                onChange={this.onChangeInstruction}\n                name=\"instruction\"\n              />\n            </div>  \n        \n            <div className=\"form-group\">\n              <label htmlFor=\"amount\">Amount</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"amount\"\n                required\n                value={this.state.amount}\n                onChange={this.onChangeAmount}\n                name=\"amount\"\n              />\n            </div>\n\n            <button onClick={this.saveInstruction} className=\"btn btn-success\">\n              Submit\n            </button>\n          </div>\n        )}\n      </div>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}