{"ast":null,"code":"var _jsxFileName = \"/Users/hollysolomon/Documents/year2/finalproject/test2/react-crud/src/components/map.component.js\";\nimport React, { Component } from \"react\"; //import InstructionDataService from \"../services/instruction.service\";\n\nimport Map from \"../map\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar mongo = require('mongodb');\n\nvar mongc = mongo.MongoClient;\n\nclass MapComponent extends Component {\n  createFakeData() {\n    // This function creates data that doesn't look entirely random\n    const data = [];\n\n    for (let x = 0; x <= 30; x++) {\n      const random = Math.random();\n      const temp = data.length > 0 ? data[data.length - 1].y : 50;\n      const y = random >= .45 ? temp + Math.floor(random * 20) : temp - Math.floor(random * 20);\n      data.push({\n        x,\n        y\n      });\n    }\n\n    return data;\n  }\n\n  positionData() {\n    mongc.connect(\"mongodb+srv://holly:marsrover@cluster0.mr177.mongodb.net/marsrover?retryWrites=true&w=majority\", (error, client) => {\n      var myCol = client.db('marsrover').collection('position');\n      console.log(myCol.find({}));\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header\",\n        children: \"react svg line chart [part 1]\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Map, {\n        data: this.createFakeData()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Map, {\n        data: this.createFakeData(),\n        color: '#F44336'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default MapComponent;","map":{"version":3,"sources":["/Users/hollysolomon/Documents/year2/finalproject/test2/react-crud/src/components/map.component.js"],"names":["React","Component","Map","mongo","require","mongc","MongoClient","MapComponent","createFakeData","data","x","random","Math","temp","length","y","floor","push","positionData","connect","error","client","myCol","db","collection","console","log","find","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;;AACA,OAAOC,GAAP,MAAgB,QAAhB;;;AAEA,IAAIC,KAAK,GAAGC,OAAO,CAAC,SAAD,CAAnB;;AACA,IAAIC,KAAK,GAAGF,KAAK,CAACG,WAAlB;;AAIA,MAAMC,YAAN,SAA2BN,SAA3B,CAAqC;AACjCO,EAAAA,cAAc,GAAE;AACd;AACA,UAAMC,IAAI,GAAG,EAAb;;AAEA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAI,EAArB,EAAyBA,CAAC,EAA1B,EAA8B;AAC5B,YAAMC,MAAM,GAAGC,IAAI,CAACD,MAAL,EAAf;AACA,YAAME,IAAI,GAAGJ,IAAI,CAACK,MAAL,GAAc,CAAd,GAAkBL,IAAI,CAACA,IAAI,CAACK,MAAL,GAAY,CAAb,CAAJ,CAAoBC,CAAtC,GAA0C,EAAvD;AACA,YAAMA,CAAC,GAAGJ,MAAM,IAAI,GAAV,GAAgBE,IAAI,GAAGD,IAAI,CAACI,KAAL,CAAWL,MAAM,GAAG,EAApB,CAAvB,GAAiDE,IAAI,GAAGD,IAAI,CAACI,KAAL,CAAWL,MAAM,GAAG,EAApB,CAAlE;AACAF,MAAAA,IAAI,CAACQ,IAAL,CAAU;AAACP,QAAAA,CAAD;AAAGK,QAAAA;AAAH,OAAV;AACD;;AACD,WAAON,IAAP;AACD;;AAEDS,EAAAA,YAAY,GAAE;AACZb,IAAAA,KAAK,CAACc,OAAN,CAAc,gGAAd,EAAgH,CAACC,KAAD,EAAQC,MAAR,KAAiB;AAC/H,UAAIC,KAAK,GAAGD,MAAM,CAACE,EAAP,CAAU,WAAV,EAAuBC,UAAvB,CAAkC,UAAlC,CAAZ;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAK,CAACK,IAAN,CAAW,EAAX,CAAZ;AACF,KAHA;AAID;;AAEDC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,GAAD;AAAK,QAAA,IAAI,EAAE,KAAKpB,cAAL;AAAX;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,GAAD;AAAK,QAAA,IAAI,EAAE,KAAKA,cAAL,EAAX;AAAkC,QAAA,KAAK,EAAE;AAAzC;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAOD;;AA7BgC;;AAgCnC,eAAeD,YAAf","sourcesContent":["import React, { Component } from \"react\";\n//import InstructionDataService from \"../services/instruction.service\";\nimport Map from \"../map\"\n\nvar mongo = require('mongodb')\nvar mongc = mongo.MongoClient\n\n\n\nclass MapComponent extends Component {\n    createFakeData(){\n      // This function creates data that doesn't look entirely random\n      const data = []\n  \n      for (let x = 0; x <= 30; x++) {\n        const random = Math.random();\n        const temp = data.length > 0 ? data[data.length-1].y : 50;\n        const y = random >= .45 ? temp + Math.floor(random * 20) : temp - Math.floor(random * 20);\n        data.push({x,y})\n      }\n      return data;\n    }\n\n    positionData(){\n      mongc.connect(\"mongodb+srv://holly:marsrover@cluster0.mr177.mongodb.net/marsrover?retryWrites=true&w=majority\", (error, client)=>{\n        var myCol = client.db('marsrover').collection('position')\n        console.log(myCol.find({}))\n     })\n    }\n  \n    render() {\n      return (\n        <div className=\"App\">\n          <div className=\"header\">react svg line chart [part 1]</div>\n          <Map data={this.createFakeData()} />\n          <Map data={this.createFakeData()} color={'#F44336'}  />\n        </div>\n      );\n    }\n  }\n  \n  export default MapComponent;\n"]},"metadata":{},"sourceType":"module"}