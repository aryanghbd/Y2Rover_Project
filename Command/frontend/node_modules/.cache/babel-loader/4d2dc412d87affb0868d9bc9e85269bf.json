{"ast":null,"code":"var _jsxFileName = \"/Users/hollysolomon/Documents/year2/finalproject/test2/react-crud/src/components/map.component.js\";\nimport React, { Component } from 'react';\nvar lastMsg;\n\nvar mqtt = require('mqtt');\n\nvar client = mqtt.connect(\"ws://18.117.97.5:9001\", {\n  clientId: \"react_feedback\",\n  username: \"hs2119\",\n  password: \"marsrover\"\n});\nconsole.log(\"connected flag  \" + client.connected);\nvar topic_list = [\"position\"];\nconsole.log(\"subscribing to topics\");\nclient.subscribe(topic_list, {\n  qos: 1\n}); //topic list\n\nclient.on(\"connect\", function () {\n  console.log(\"connected  \" + client.connected);\n});\nimport LineChart from '../LineChart';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Map extends Component {\n  createFakeData() {\n    // This function creates data that doesn't look entirely random\n    const data = [];\n\n    for (let x = 0; x <= 30; x++) {\n      const random = Math.random();\n      const temp = data.length > 0 ? data[data.length - 1].y : 50;\n      const y = random >= .45 ? temp + Math.floor(random * 20) : temp - Math.floor(random * 20);\n      data.push({\n        x,\n        y\n      });\n    }\n\n    return data;\n  }\n\n  roverPosition() {\n    const data = [];\n    client.on('message', function (topic, message, packet) {\n      console.log(\"message is \" + message);\n      console.log(\"topic is \" + topic);\n      lastMsg = message.toString();\n    });\n    data.push({\n      lastMsg\n    });\n    return data;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header\",\n        children: \"react svg line chart [part 1]\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(LineChart, {\n        data: this.createFakeData()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(LineChart, {\n        data: this.roverPosition(),\n        color: '#F44336'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Map;","map":{"version":3,"sources":["/Users/hollysolomon/Documents/year2/finalproject/test2/react-crud/src/components/map.component.js"],"names":["React","Component","lastMsg","mqtt","require","client","connect","clientId","username","password","console","log","connected","topic_list","subscribe","qos","on","LineChart","Map","createFakeData","data","x","random","Math","temp","length","y","floor","push","roverPosition","topic","message","packet","toString","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,IAAIC,OAAJ;;AACA,IAAIC,IAAI,GAAGC,OAAO,CAAC,MAAD,CAAlB;;AACA,IAAIC,MAAM,GAAGF,IAAI,CAACG,OAAL,CAAa,uBAAb,EAAsC;AAACC,EAAAA,QAAQ,EAAC,gBAAV;AAA4BC,EAAAA,QAAQ,EAAC,QAArC;AAA+CC,EAAAA,QAAQ,EAAC;AAAxD,CAAtC,CAAb;AACAC,OAAO,CAACC,GAAR,CAAY,qBAAqBN,MAAM,CAACO,SAAxC;AAEA,IAAIC,UAAU,GAAC,CAAC,UAAD,CAAf;AACAH,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACAN,MAAM,CAACS,SAAP,CAAiBD,UAAjB,EAA4B;AAACE,EAAAA,GAAG,EAAC;AAAL,CAA5B,E,CAAsC;;AAEtCV,MAAM,CAACW,EAAP,CAAU,SAAV,EAAoB,YAAU;AAC5BN,EAAAA,OAAO,CAACC,GAAR,CAAY,gBAAeN,MAAM,CAACO,SAAlC;AACC,CAFH;AAIA,OAAOK,SAAP,MAAsB,cAAtB;;;AAEA,MAAMC,GAAN,SAAkBjB,SAAlB,CAA4B;AAC1BkB,EAAAA,cAAc,GAAE;AACd;AACA,UAAMC,IAAI,GAAG,EAAb;;AAEA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAI,EAArB,EAAyBA,CAAC,EAA1B,EAA8B;AAC5B,YAAMC,MAAM,GAAGC,IAAI,CAACD,MAAL,EAAf;AACA,YAAME,IAAI,GAAGJ,IAAI,CAACK,MAAL,GAAc,CAAd,GAAkBL,IAAI,CAACA,IAAI,CAACK,MAAL,GAAY,CAAb,CAAJ,CAAoBC,CAAtC,GAA0C,EAAvD;AACA,YAAMA,CAAC,GAAGJ,MAAM,IAAI,GAAV,GAAgBE,IAAI,GAAGD,IAAI,CAACI,KAAL,CAAWL,MAAM,GAAG,EAApB,CAAvB,GAAiDE,IAAI,GAAGD,IAAI,CAACI,KAAL,CAAWL,MAAM,GAAG,EAApB,CAAlE;AACAF,MAAAA,IAAI,CAACQ,IAAL,CAAU;AAACP,QAAAA,CAAD;AAAGK,QAAAA;AAAH,OAAV;AACD;;AACD,WAAON,IAAP;AACD;;AAEDS,EAAAA,aAAa,GAAE;AACb,UAAMT,IAAI,GAAG,EAAb;AACAf,IAAAA,MAAM,CAACW,EAAP,CAAU,SAAV,EAAoB,UAASc,KAAT,EAAgBC,OAAhB,EAAyBC,MAAzB,EAAgC;AAClDtB,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAeoB,OAA3B;AACArB,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAamB,KAAzB;AACA5B,MAAAA,OAAO,GAAG6B,OAAO,CAACE,QAAR,EAAV;AACD,KAJD;AAMAb,IAAAA,IAAI,CAACQ,IAAL,CAAU;AAAC1B,MAAAA;AAAD,KAAV;AACA,WAAOkB,IAAP;AAED;;AAEDc,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,SAAD;AAAW,QAAA,IAAI,EAAE,KAAKf,cAAL;AAAjB;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,SAAD;AAAW,QAAA,IAAI,EAAE,KAAKU,aAAL,EAAjB;AAAuC,QAAA,KAAK,EAAE;AAA9C;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAOD;;AAnCyB;;AAsC5B,eAAeX,GAAf","sourcesContent":["import React, { Component } from 'react';\n\nvar lastMsg\nvar mqtt = require('mqtt')\nvar client = mqtt.connect(\"ws://18.117.97.5:9001\", {clientId:\"react_feedback\", username:\"hs2119\", password:\"marsrover\"})\nconsole.log(\"connected flag  \" + client.connected);\n\nvar topic_list=[\"position\"];\nconsole.log(\"subscribing to topics\");\nclient.subscribe(topic_list,{qos:1}); //topic list\n\nclient.on(\"connect\",function(){\t\n  console.log(\"connected  \"+ client.connected);\n  })\n\nimport LineChart from '../LineChart';\n\nclass Map extends Component {\n  createFakeData(){\n    // This function creates data that doesn't look entirely random\n    const data = []\n\n    for (let x = 0; x <= 30; x++) {\n      const random = Math.random();\n      const temp = data.length > 0 ? data[data.length-1].y : 50;\n      const y = random >= .45 ? temp + Math.floor(random * 20) : temp - Math.floor(random * 20);\n      data.push({x,y})\n    }\n    return data;\n  }\n\n  roverPosition(){\n    const data = []\n    client.on('message',function(topic, message, packet){\n      console.log(\"message is \"+ message);\n      console.log(\"topic is \"+ topic);\n      lastMsg = message.toString()\n    })\n\n    data.push({lastMsg})\n    return data;\n\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"header\">react svg line chart [part 1]</div>\n        <LineChart data={this.createFakeData()} />\n        <LineChart data={this.roverPosition()} color={'#F44336'}  />\n      </div>\n    );\n  }\n}\n\nexport default Map;"]},"metadata":{},"sourceType":"module"}