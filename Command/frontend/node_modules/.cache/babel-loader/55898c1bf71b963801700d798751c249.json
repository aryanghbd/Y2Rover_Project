{"ast":null,"code":"var _jsxFileName = \"/Users/hollysolomon/Documents/year2/finalproject/test2/react-crud/src/components/map.component.js\";\nimport React, { Component } from \"react\";\nimport PositionDataService from \"../services/position.service\";\nimport Map from \"../map\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass MapComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.retrieveInstructions = this.retrieveInstructions.bind(this);\n    this.state = {\n      position: [],\n      currentInstruction: null,\n      currentIndex: -1\n    };\n  }\n\n  componentDidMount() {\n    this.retrievePosition();\n  }\n\n  retrievePosition() {\n    PositionDataService.getAll().then(response => {\n      this.setState({\n        position: response.data\n      });\n      console.log(response.data);\n    }).catch(e => {\n      console.log(e);\n    });\n  }\n\n  createFakeData() {\n    // This function creates data that doesn't look entirely random\n    const data = [];\n\n    for (let x = 0; x <= 30; x++) {\n      const random = Math.random();\n      const temp = data.length > 0 ? data[data.length - 1].y : 50;\n      const y = random >= .45 ? temp + Math.floor(random * 20) : temp - Math.floor(random * 20);\n      data.push({\n        x,\n        y\n      });\n    }\n\n    return data;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header\",\n        children: \"react svg line chart [part 1]\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Map, {\n        data: this.createFakeData()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Map, {\n        data: this.createFakeData(),\n        color: '#F44336'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default MapComponent;","map":{"version":3,"sources":["/Users/hollysolomon/Documents/year2/finalproject/test2/react-crud/src/components/map.component.js"],"names":["React","Component","PositionDataService","Map","MapComponent","constructor","props","retrieveInstructions","bind","state","position","currentInstruction","currentIndex","componentDidMount","retrievePosition","getAll","then","response","setState","data","console","log","catch","e","createFakeData","x","random","Math","temp","length","y","floor","push","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,mBAAP,MAAgC,8BAAhC;AACA,OAAOC,GAAP,MAAgB,QAAhB;;;AAGA,MAAMC,YAAN,SAA2BH,SAA3B,CAAqC;AACnCI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,oBAAL,GAA4B,KAAKA,oBAAL,CAA0BC,IAA1B,CAA+B,IAA/B,CAA5B;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE,EADC;AAEXC,MAAAA,kBAAkB,EAAE,IAFT;AAGXC,MAAAA,YAAY,EAAE,CAAC;AAHJ,KAAb;AAKD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,gBAAL;AACD;;AAEDA,EAAAA,gBAAgB,GAAG;AACjBZ,IAAAA,mBAAmB,CAACa,MAApB,GACGC,IADH,CACQC,QAAQ,IAAI;AAChB,WAAKC,QAAL,CAAc;AACZR,QAAAA,QAAQ,EAAEO,QAAQ,CAACE;AADP,OAAd;AAGAC,MAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAQ,CAACE,IAArB;AACD,KANH,EAOGG,KAPH,CAOSC,CAAC,IAAI;AACVH,MAAAA,OAAO,CAACC,GAAR,CAAYE,CAAZ;AACD,KATH;AAUD;;AAGCC,EAAAA,cAAc,GAAE;AACd;AACA,UAAML,IAAI,GAAG,EAAb;;AAEA,SAAK,IAAIM,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAI,EAArB,EAAyBA,CAAC,EAA1B,EAA8B;AAC5B,YAAMC,MAAM,GAAGC,IAAI,CAACD,MAAL,EAAf;AACA,YAAME,IAAI,GAAGT,IAAI,CAACU,MAAL,GAAc,CAAd,GAAkBV,IAAI,CAACA,IAAI,CAACU,MAAL,GAAY,CAAb,CAAJ,CAAoBC,CAAtC,GAA0C,EAAvD;AACA,YAAMA,CAAC,GAAGJ,MAAM,IAAI,GAAV,GAAgBE,IAAI,GAAGD,IAAI,CAACI,KAAL,CAAWL,MAAM,GAAG,EAApB,CAAvB,GAAiDE,IAAI,GAAGD,IAAI,CAACI,KAAL,CAAWL,MAAM,GAAG,EAApB,CAAlE;AACAP,MAAAA,IAAI,CAACa,IAAL,CAAU;AAACP,QAAAA,CAAD;AAAGK,QAAAA;AAAH,OAAV;AACD;;AACD,WAAOX,IAAP;AACD;;AAIDc,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,GAAD;AAAK,QAAA,IAAI,EAAE,KAAKT,cAAL;AAAX;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,GAAD;AAAK,QAAA,IAAI,EAAE,KAAKA,cAAL,EAAX;AAAkC,QAAA,KAAK,EAAE;AAAzC;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAOD;;AArDgC;;AAwDnC,eAAepB,YAAf","sourcesContent":["import React, { Component } from \"react\";\nimport PositionDataService from \"../services/position.service\";\nimport Map from \"../map\"\n\n\nclass MapComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.retrieveInstructions = this.retrieveInstructions.bind(this);\n\n    this.state = {\n      position: [],\n      currentInstruction: null,\n      currentIndex: -1,\n    };\n  }\n\n  componentDidMount() {\n    this.retrievePosition();\n  }\n\n  retrievePosition() {\n    PositionDataService.getAll()\n      .then(response => {\n        this.setState({\n          position: response.data\n        });\n        console.log(response.data);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  }\n\n\n    createFakeData(){\n      // This function creates data that doesn't look entirely random\n      const data = []\n  \n      for (let x = 0; x <= 30; x++) {\n        const random = Math.random();\n        const temp = data.length > 0 ? data[data.length-1].y : 50;\n        const y = random >= .45 ? temp + Math.floor(random * 20) : temp - Math.floor(random * 20);\n        data.push({x,y})\n      }\n      return data;\n    }\n\n    \n  \n    render() {\n      return (\n        <div className=\"App\">\n          <div className=\"header\">react svg line chart [part 1]</div>\n          <Map data={this.createFakeData()} />\n          <Map data={this.createFakeData()} color={'#F44336'}  />\n        </div>\n      );\n    }\n  }\n  \n  export default MapComponent;\n"]},"metadata":{},"sourceType":"module"}