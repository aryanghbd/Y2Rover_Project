{"ast":null,"code":"var _jsxFileName = \"/Users/hollysolomon/Documents/year2/finalproject/web-app/frontend/src/components/add-instruction.component.js\";\nimport React, { Component } from \"react\";\nimport InstructionDataService from \"../services/instruction.service\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar lastTopic;\nvar lastMsg;\n\nvar mqtt = require('mqtt');\n\nvar client = mqtt.connect(\"ws://18.117.97.5:9001\", {\n  clientId: \"react_feedback\",\n  username: \"hs2119\",\n  password: \"marsrover\"\n});\nconsole.log(\"connected flag  \" + client.connected);\nvar topic_list = [\"feedback\", \"error\"];\nconsole.log(\"subscribing to topics\");\nclient.subscribe(topic_list, {\n  qos: 1\n}); //topic list\n\nclient.on(\"connect\", function () {\n  console.log(\"connected  \" + client.connected);\n});\nexport default class AddInstruction extends Component {\n  constructor(props) {\n    super(props);\n    this.onChangeInstruction = this.onChangeInstruction.bind(this);\n    this.onChangeAmount = this.onChangeAmount.bind(this);\n    this.saveInstruction = this.saveInstruction.bind(this);\n    this.newInstruction = this.newInstruction.bind(this);\n    this.newFeedback = this.newFeedback.bind(this);\n    this.state = {\n      currentInstruction: {\n        id: null,\n        instruction: \"\",\n        amount: \"\",\n        status: false,\n        submitted: false\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.newFeedback();\n  }\n\n  newFeedback() {\n    //handle incoming messages\n    client.on('message', function (topic, message, packet) {\n      //console.log(\"message is \"+ message);\n      //console.log(\"topic is \"+ topic);\n      alert(message);\n      lastTopic = topic.toString();\n      lastMsg = message;\n    });\n  }\n\n  onChangeInstruction(e) {\n    this.setState({\n      instruction: e.target.value\n    });\n  }\n\n  onChangeAmount(e) {\n    this.setState({\n      amount: e.target.value\n    });\n  }\n\n  saveInstruction() {\n    var data = {\n      instruction: this.state.instruction,\n      amount: this.state.amount\n    };\n    InstructionDataService.create(data).then(response => {\n      this.setState({\n        id: response.data.id,\n        instruction: response.data.instruction,\n        amount: response.data.amount,\n        status: response.data.status,\n        submitted: true\n      });\n      console.log(response.data);\n    }).catch(e => {\n      console.log(e);\n    });\n  }\n\n  newInstruction() {\n    this.setState({\n      id: null,\n      instruction: \"\",\n      amount: \"\",\n      status: false,\n      submitted: false\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"submit-form\",\n      children: this.state.submitted ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"You submitted successfully!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-success\",\n          onClick: this.newInstruction,\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"instruction\",\n            children: \"Instruction\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            id: \"instruction\",\n            required: true,\n            value: this.state.instruction,\n            onChange: this.onChangeInstruction,\n            name: \"instruction\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"amount\",\n            children: \"Amount\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            id: \"amount\",\n            required: true,\n            value: this.state.amount,\n            onChange: this.onChangeAmount,\n            name: \"amount\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.saveInstruction,\n          className: \"btn btn-success\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/hollysolomon/Documents/year2/finalproject/web-app/frontend/src/components/add-instruction.component.js"],"names":["React","Component","InstructionDataService","lastTopic","lastMsg","mqtt","require","client","connect","clientId","username","password","console","log","connected","topic_list","subscribe","qos","on","AddInstruction","constructor","props","onChangeInstruction","bind","onChangeAmount","saveInstruction","newInstruction","newFeedback","state","currentInstruction","id","instruction","amount","status","submitted","componentDidMount","topic","message","packet","alert","toString","e","setState","target","value","data","create","then","response","catch","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport InstructionDataService from \"../services/instruction.service\";\n\nvar lastTopic\nvar lastMsg\nvar mqtt = require('mqtt')\nvar client = mqtt.connect(\"ws://18.117.97.5:9001\", {clientId:\"react_feedback\", username:\"hs2119\", password:\"marsrover\"})\nconsole.log(\"connected flag  \" + client.connected);\n\nvar topic_list=[\"feedback\", \"error\"];\nconsole.log(\"subscribing to topics\");\nclient.subscribe(topic_list,{qos:1}); //topic list\n\nclient.on(\"connect\",function(){\t\n  console.log(\"connected  \"+ client.connected);\n  })\n  \n\nexport default class AddInstruction extends Component {\n  constructor(props) {\n    super(props);\n    this.onChangeInstruction = this.onChangeInstruction.bind(this);\n    this.onChangeAmount = this.onChangeAmount.bind(this);\n    this.saveInstruction = this.saveInstruction.bind(this);\n    this.newInstruction = this.newInstruction.bind(this);\n    this.newFeedback = this.newFeedback.bind(this);\n\n    this.state = {\n      currentInstruction: {\n      id: null,\n      instruction: \"\",\n      amount: \"\", \n      status: false,\n      \n      submitted: false\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.newFeedback()\n  }\n\n  newFeedback() {\n  //handle incoming messages\n  client.on('message',function(topic, message, packet){\n\t//console.log(\"message is \"+ message);\n\t//console.log(\"topic is \"+ topic);\n      alert(message)\n      lastTopic = topic.toString()\n      lastMsg = message\n  })\n\n  } \n\n  onChangeInstruction(e) {\n    this.setState({\n      instruction: e.target.value\n    });\n  }\n\n  onChangeAmount(e) {\n    this.setState({\n      amount: e.target.value\n    });\n  }\n  \n  saveInstruction() {\n    var data = {\n      instruction: this.state.instruction,\n      amount: this.state.amount\n    };\n\n    InstructionDataService.create(data)\n      .then(response => {\n        this.setState({\n          id: response.data.id,\n          instruction: response.data.instruction,\n          amount: response.data.amount,\n          status: response.data.status,\n\n          submitted: true\n        });\n        console.log(response.data);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  }\n\n  newInstruction() {\n    this.setState({\n      id: null,\n      instruction: \"\",\n      amount: \"\",\n      status: false,\n\n      submitted: false\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"submit-form\">\n        {this.state.submitted ? (\n          <div>\n            <h4>You submitted successfully!</h4>\n            <button className=\"btn btn-success\" onClick={this.newInstruction}>\n              Add\n            </button>\n          </div>\n        ) : (\n          <div>\n            \n            <div className=\"form-group\">\n              <label htmlFor=\"instruction\">Instruction</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"instruction\"\n                required\n                value={this.state.instruction}\n                onChange={this.onChangeInstruction}\n                name=\"instruction\"\n              />\n            </div>  \n        \n            <div className=\"form-group\">\n              <label htmlFor=\"amount\">Amount</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"amount\"\n                required\n                value={this.state.amount}\n                onChange={this.onChangeAmount}\n                name=\"amount\"\n              />\n            </div>\n\n            <button onClick={this.saveInstruction} className=\"btn btn-success\">\n              Submit\n            </button>\n          </div>\n        )}\n      </div>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}