{"ast":null,"code":"var _jsxFileName = \"/Users/hollysolomon/Documents/year2/finalproject/test2/react-crud/src/components/add-instruction.component.js\";\nimport React, { Component } from \"react\";\nimport InstructionDataService from \"../services/instruction.service\";\nimport { Dropdown } from 'react-dropdown-now';\nimport 'react-dropdown-now/style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class AddInstruction extends Component {\n  constructor(props) {\n    super(props);\n    this.onChangeDirection = this.onChangeDirection.bind(this);\n    this.onChangeDescription = this.onChangeDescription.bind(this);\n    this.saveInstruction = this.saveInstruction.bind(this);\n    this.newInstruction = this.newInstruction.bind(this);\n    this.state = {\n      id: null,\n      direction: \"\",\n      description: \"\",\n      published: false,\n      submitted: false\n    };\n  }\n\n  onChangeDirection(e) {\n    this.setState({\n      direction: e.target.value\n    });\n  }\n\n  onChangeDescription(e) {\n    this.setState({\n      description: e.target.value\n    });\n  }\n\n  saveInstruction() {\n    var data = {\n      direction: this.state.direction,\n      description: this.state.description\n    };\n    InstructionDataService.create(data).then(response => {\n      this.setState({\n        id: response.data.id,\n        direction: response.data.direction,\n        description: response.data.description,\n        published: response.data.published,\n        submitted: true\n      });\n      console.log(response.data);\n    }).catch(e => {\n      console.log(e);\n    });\n  }\n\n  newInstruction() {\n    this.setState({\n      id: null,\n      direction: \"\",\n      description: \"\",\n      published: false,\n      submitted: false\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"submit-form\",\n      children: this.state.submitted ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"You submitted successfully!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-success\",\n          onClick: this.newInstruction,\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(Dropdown, {\n            placeholder: \"Select an Instruction\",\n            options: ['one', 'two', 'three'],\n            value: this.state.direction,\n            required: true,\n            onChange: this.onChangeDirection,\n            onSelect: 'one' // always fires once a selection happens even if there is no change\n\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this), \";\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"description\",\n            children: \"Amount\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            id: \"description\",\n            required: true,\n            value: this.state.description,\n            onChange: this.onChangeDescription,\n            name: \"description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.saveInstruction,\n          className: \"btn btn-success\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/hollysolomon/Documents/year2/finalproject/test2/react-crud/src/components/add-instruction.component.js"],"names":["React","Component","InstructionDataService","Dropdown","AddInstruction","constructor","props","onChangeDirection","bind","onChangeDescription","saveInstruction","newInstruction","state","id","direction","description","published","submitted","e","setState","target","value","data","create","then","response","console","log","catch","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport InstructionDataService from \"../services/instruction.service\";\nimport { Dropdown } from 'react-dropdown-now';\nimport 'react-dropdown-now/style.css';\n\nexport default class AddInstruction extends Component {\n  constructor(props) {\n    super(props);\n    this.onChangeDirection = this.onChangeDirection.bind(this);\n    this.onChangeDescription = this.onChangeDescription.bind(this);\n    this.saveInstruction = this.saveInstruction.bind(this);\n    this.newInstruction = this.newInstruction.bind(this);\n\n    this.state = {\n      id: null,\n      direction: \"\",\n      description: \"\", \n      published: false,\n\n      submitted: false\n    };\n  }\n\n  onChangeDirection(e) {\n    this.setState({\n      direction: e.target.value\n    });\n  }\n\n  onChangeDescription(e) {\n    this.setState({\n      description: e.target.value\n    });\n  }\n\n  saveInstruction() {\n    var data = {\n      direction: this.state.direction,\n      description: this.state.description\n    };\n\n    InstructionDataService.create(data)\n      .then(response => {\n        this.setState({\n          id: response.data.id,\n          direction: response.data.direction,\n          description: response.data.description,\n          published: response.data.published,\n\n          submitted: true\n        });\n        console.log(response.data);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  }\n\n  newInstruction() {\n    this.setState({\n      id: null,\n      direction: \"\",\n      description: \"\",\n      published: false,\n\n      submitted: false\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"submit-form\">\n        {this.state.submitted ? (\n          <div>\n            <h4>You submitted successfully!</h4>\n            <button className=\"btn btn-success\" onClick={this.newInstruction}>\n              Add\n            </button>\n          </div>\n        ) : (\n          <div>\n            <div className=\"form-group\">\n            <Dropdown\n              placeholder=\"Select an Instruction\"\n              options={['one', 'two', 'three']}\n              value={this.state.direction}\n              required\n              onChange={this.onChangeDirection}\n              onSelect={('one')} // always fires once a selection happens even if there is no change\n              />;\n            </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"description\">Amount</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"description\"\n                required\n                value={this.state.description}\n                onChange={this.onChangeDescription}\n                name=\"description\"\n              />\n            </div>\n\n            <button onClick={this.saveInstruction} className=\"btn btn-success\">\n              Submit\n            </button>\n          </div>\n        )}\n      </div>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}