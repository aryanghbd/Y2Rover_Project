{"ast":null,"code":"var _jsxFileName = \"/Users/hollysolomon/Documents/year2/finalproject/test2/react-crud/src/components/mapv2.component.js\";\nimport { CanvasJSChart } from 'canvasjs-react-charts';\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar data = [];\nvar pos = [''];\nvar updateInterval = 10;\nvar lastMsg;\nvar lastMsg2;\nvar lastTopic;\n\nvar mqtt = require('mqtt');\n\nvar client = mqtt.connect(\"ws://18.117.97.5:9001\", {\n  clientId: \"react_position\",\n  username: \"hs2119\",\n  password: \"marsrover\"\n});\nconsole.log(\"connected flag  \" + client.connected);\nvar topic_list = [\"position\", \"colour\", \"objectproximity\", \"objectcoordinates\"];\nconsole.log(\"subscribing to topics\");\nclient.subscribe(topic_list, {\n  qos: 1\n}); //topic list\n\nclient.on(\"connect\", function () {\n  console.log(\"connected  \" + client.connected);\n});\n\nclass Map extends Component {\n  constructor() {\n    super();\n    this.updateChart = this.updateChart.bind(this);\n    this.colour = '';\n    this.objectproximity = '';\n    this.objectcoordinates = '';\n  }\n\n  componentDidMount() {\n    setInterval(this.updateChart, updateInterval);\n  }\n\n  updateChart() {\n    client.on('message', function (topic, message, packet) {\n      // console.log(\"message is \"+ message);\n      // console.log(\"topic is \"+ topic);\n      lastMsg = message.toString();\n      lastTopic = topic.toString();\n      lastMsg2 = message;\n    });\n\n    if (lastTopic == 'colour') {\n      this.colour = lastMsg2; //console.log('im here')\n      //console.log(this.colour)\n\n      this.render();\n    }\n\n    if (lastTopic == 'objectproximity') {\n      this.objectproximity = lastMsg;\n      this.chart.render();\n    }\n\n    if (lastTopic == 'objectcoordinates') {\n      this.objectcoordinates = lastMsg;\n      this.chart.render();\n    }\n\n    if (lastTopic == 'position') {\n      if (lastMsg != null && lastMsg != pos[pos.length - 1] && this.chart != null && lastMsg != '-128,-128') {\n        pos.push(lastMsg); //console.log(\"diff value\"+ lastMsg + \" \" + pos[pos.length - 1])\n\n        var coords_str = lastMsg.split(',');\n        var x = parseFloat(coords_str[0]);\n        var y = parseFloat(coords_str[1]);\n        data.push({\n          x: x,\n          y: y\n        });\n        console.log(data);\n        this.chart.render();\n      }\n    }\n  }\n\n  render() {\n    const options = {\n      height: 700,\n      width: 1300,\n      title: {\n        text: \"Mars Rover Plot\"\n      },\n      data: [{\n        type: \"line\",\n        dataPoints: data\n      }]\n    };\n    var x = this.colour.toString();\n    console.log(x);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(CanvasJSChart, {\n        options: options,\n        onRef: ref => this.chart = ref\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"An object coloured \", /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"x\",\n          children: x\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 27\n        }, this), \" has been detected with position \", \", the object is \", \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 4\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 3\n    }, this);\n  }\n\n}\n\nexport default Map;","map":{"version":3,"sources":["/Users/hollysolomon/Documents/year2/finalproject/test2/react-crud/src/components/mapv2.component.js"],"names":["CanvasJSChart","React","Component","data","pos","updateInterval","lastMsg","lastMsg2","lastTopic","mqtt","require","client","connect","clientId","username","password","console","log","connected","topic_list","subscribe","qos","on","Map","constructor","updateChart","bind","colour","objectproximity","objectcoordinates","componentDidMount","setInterval","topic","message","packet","toString","render","chart","length","push","coords_str","split","x","parseFloat","y","options","height","width","title","text","type","dataPoints","ref"],"mappings":"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","sourcesContent":["import {CanvasJSChart} from 'canvasjs-react-charts'\nimport React, { Component } from 'react';\n\nvar data = []\nvar pos = ['']\nvar updateInterval = 10;\n\nvar lastMsg\nvar lastMsg2\nvar lastTopic\nvar mqtt = require('mqtt')\nvar client = mqtt.connect(\"ws://18.117.97.5:9001\", {clientId:\"react_position\", username:\"hs2119\", password:\"marsrover\"})\nconsole.log(\"connected flag  \" + client.connected);\n\nvar topic_list=[\"position\",\"colour\", \"objectproximity\", \"objectcoordinates\"];\nconsole.log(\"subscribing to topics\");\nclient.subscribe(topic_list,{qos:1}); //topic list\n\nclient.on(\"connect\",function(){\t\n  console.log(\"connected  \"+ client.connected);\n  })\n\n\nclass Map extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.updateChart = this.updateChart.bind(this);\n\t\tthis.colour = ''\n\t\tthis.objectproximity = ''\n\t\tthis.objectcoordinates  = ''\t\n\t}\n\tcomponentDidMount() {\n\t\tsetInterval(this.updateChart, updateInterval);\n\t}\n\n\tupdateChart() {\n\t\tclient.on('message',function(topic, message, packet){\n     // console.log(\"message is \"+ message);\n     // console.log(\"topic is \"+ topic);\n      lastMsg = message.toString()\n\t  lastTopic = topic.toString()\n\t  lastMsg2 = message\n\t\n    })\n\n    if (lastTopic == 'colour'){\n\t\tthis.colour = lastMsg2\n\t\t//console.log('im here')\n\t\t//console.log(this.colour)\n\t\tthis.render();\n\t  }\n\t  if (lastTopic == 'objectproximity'){\n\t\tthis.objectproximity = lastMsg\n\t\tthis.chart.render();\n\t  }\n\t  if (lastTopic == 'objectcoordinates'){\n\t\tthis.objectcoordinates = lastMsg\n\t\tthis.chart.render();\n  }\n\tif (lastTopic == 'position'){\n    \tif (lastMsg != null && lastMsg != pos[pos.length - 1] && this.chart != null && lastMsg != '-128,-128'){\n    \t\tpos.push(lastMsg)\n      \t\t//console.log(\"diff value\"+ lastMsg + \" \" + pos[pos.length - 1])\n      \n      \t\tvar coords_str = lastMsg.split(',')\n      \t\tvar x = parseFloat(coords_str[0]);\n      \t\tvar y = parseFloat(coords_str[1]);\n      \t\tdata.push({x: x,y: y});\n      \t\tconsole.log(data)\n      \t\tthis.chart.render();\n    } }\n\t\n\t\n\t\t\n\t}\n\n\n\trender() {\n\t\tconst options = {\n\t\t\theight: 700,\n\t\t\twidth: 1300,\n\t\t\ttitle :{\n\t\t\t\ttext: \"Mars Rover Plot\"\n\t\t\t},\n\t\t\tdata: [{\n\t\t\t\ttype: \"line\",\n\t\t\t\tdataPoints : data\n\t\t\t}]\n\t\t}\n\t\tvar x = this.colour.toString()\n\t\tconsole.log(x)\n\t\t\n\t\treturn (\n\t\t<div>\n\t\t\t<CanvasJSChart options = {options}\n\t\t\t\t onRef={ref => this.chart = ref}\n\t\t\t/>\n\t\t\t{/*You can get reference to the chart instance as shown above using onRef. This allows you to access all chart properties and methods*/}\n\t\t\t<h4>An object coloured <div className='x'>{x}</div> has been detected with position {}, the object is {} </h4>\n\t\t</div>\n\t\t);\n\t}\n}\nexport default Map;                     "]},"metadata":{},"sourceType":"module"}